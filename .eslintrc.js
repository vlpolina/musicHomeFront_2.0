module.exports = {
  parser: '@typescript-eslint/parser',
  extends: [
    'eslint:recommended',
    'plugin:react/recommended',
    'plugin:import/warnings',
    'plugin:import/errors',
    'plugin:prettier/recommended',
    'next/core-web-vitals',
  ],
  parserOptions: {
    ecmaVersion: 7,
    sourceType: 'module',
    ecmaFeatures: {
      modules: true,
      jsx: true,
      forOf: true,
      blockBindings: true,
      arrowFunctions: true,
      classes: true,
      defaultParams: true,
      destructuring: true,
      generators: true,
      restParams: true,
      spread: true,
      superInFunctions: true,
      templateStrings: true,
      experimentalObjectRestSpread: true,
      experimentalDecorators: true,
    },
  },
  plugins: [
    'react',
    'react-hooks',
    '@typescript-eslint',
    'prettier',
    'eslint-plugin-unused-imports',
  ],

  rules: {
    'global-require': 0,
    'max-len': [
      'warn',
      {
        code: 100,
        ignoreUrls: true,
        ignoreTemplateLiterals: true,
        ignoreStrings: true,
      },
    ],
    'import/no-unresolved': 'off',
    'import/no-cycle': 'error',
    'import/no-named-as-default': 'off',
    'import/extensions': 'off',
    'import/prefer-default-export': 'off',
    'import/no-extraneous-dependencies': 'off',
    'no-var': 'warn',
    'no-const-assign': 'warn',
    'object-shorthand': 'warn',
    'no-loop-func': 'warn',
    'prefer-rest-params': 'warn',
    'space-before-blocks': 'warn',
    'class-methods-use-this': 'off',
    'prefer-spread': 'warn',
    'no-param-reassign': 'error',
    'prefer-arrow-callback': 'warn',
    'arrow-spacing': 'warn',
    'arrow-body-style': 'off',
    'no-dupe-class-members': 'warn',
    'no-duplicate-imports': 'warn',
    'no-iterator': 'warn',
    'no-unused-vars': 'warn',
    'no-restricted-syntax': 'warn',
    'generator-star-spacing': 'warn',
    'dot-notation': 'warn',
    'no-restricted-properties': 'warn',
    'no-plusplus': 'off',
    'no-unneeded-ternary': 'warn',
    'brace-style': 'warn',
    'spaced-comment': 'off',
    'keyword-spacing': 'warn',
    'space-infix-ops': 'warn',
    'no-shadow': 'off',
    'react/react-in-jsx-scope': 'off',
    semi: ['error', 'never'],
    radix: 'off',
    camelcase: 'off',
    'comma-dangle': [
      'error',
      {
        arrays: 'always-multiline',
        objects: 'always-multiline',
        exports: 'always-multiline',
        imports: 'always-multiline',
      },
    ],
    'jsx-quotes': ['warn', 'prefer-double'],
    quotes: ['warn', 'single'],
    'quote-props': ['warn', 'as-needed'],
    'no-multi-spaces': 'warn',
    'react/boolean-prop-naming': 'warn',
    'react/prop-types': [
      'off',
      {
        ignore: ['className', 'children', 'dispatch', 'location', 'match', 'history'],
      },
    ],
    'react/jsx-closing-bracket-location': 'warn',
    'react/jsx-closing-tag-location': 'warn',
    'react/jsx-tag-spacing': 'warn',
    'react/jsx-curly-spacing': 'warn',
    'react/jsx-boolean-value': 'warn',
    'react/jsx-wrap-multilines': 'warn',
    'react/self-closing-comp': 'warn',
    'react/jsx-uses-vars': 'warn',
    'react-hooks/rules-of-hooks': 'error',
    'react-hooks/exhaustive-deps': 'off',
    'prettier/prettier': 'warn',
    'unused-imports/no-unused-imports': 'error',
    '@next/next/no-img-element': 'off',
    '@next/next/no-sync-scripts': 'off',
    'jsx-a11y/alt-text': 'off',
    'no-prototype-builtins': 'off',
    'no-case-declarations': 'error',
  },
  overrides: [
    {
      files: ['*.ts', '*.tsx'],
      rules: {
        'no-undef': 'off',
        'no-unused-vars': 'off',
        '@typescript-eslint/no-unused-vars': 'off',
        '@typescript-eslint/no-explicit-any': 'off',
        '@typescript-eslint/adjacent-overload-signatures': 'error',
        '@typescript-eslint/ban-ts-comment': 'error',
        '@typescript-eslint/ban-types': 'error',
        camelcase: 'off',
        '@typescript-eslint/naming-convention': [
          'error',
          {
            selector: 'function',
            format: ['PascalCase', 'camelCase'],
          },
        ],
        '@typescript-eslint/consistent-type-assertions': 'error',
        '@typescript-eslint/member-delimiter-style': [
          2,
          {
            multiline: {
              delimiter: 'none',
            },
            singleline: {
              delimiter: 'semi',
            },
          },
        ],
        'no-array-constructor': 'off',
        '@typescript-eslint/no-array-constructor': 'error',
        'no-empty-function': 'off',
        '@typescript-eslint/no-empty-function': 'error',
        '@typescript-eslint/no-empty-interface': 'error',
        '@typescript-eslint/no-inferrable-types': 'error',
        '@typescript-eslint/no-misused-new': 'error',
        '@typescript-eslint/no-namespace': 'error',
        '@typescript-eslint/no-non-null-assertion': 'off',
        '@typescript-eslint/no-this-alias': 'error',
        'no-use-before-define': 'off',
        '@typescript-eslint/no-use-before-define': 'error',
        '@typescript-eslint/no-var-requires': 0,
        '@typescript-eslint/prefer-namespace-keyword': 'error',
        '@typescript-eslint/triple-slash-reference': 'error',
        '@typescript-eslint/type-annotation-spacing': 'error',
        'no-var': 'error',
        'prefer-const': 'error',
        'prefer-rest-params': 'error',
        'prefer-spread': 'off',
        'import/namespace': 'off',
        'import/no-cycle': 'off',
        'import/no-extraneous-dependencies': 'off',
        'import/named': 'off',
        'import/no-duplicates': 'off',
        'import/default': 'off',
        'import/no-named-as-default-member': 'off',
        'import/no-anonymous-default-export': 'off',
        'react/display-name': 'off',
      },
    },
  ],
  settings: {
    'import/resolver': {
      'babel-module': {
        extensions: ['.js', '.jsx', '.ts', '.tsx'],
      },
      node: {
        extensions: ['.js', '.jsx', '.ts', '.tsx'],
        paths: ['src'],
      },
      alias: [
        ['@root', './'],
        ['@components', './components'],
        ['@lib', './lib'],
        ['@icons', './components/icons'],
        ['@styles', './styles'],
        ['@utils', './utils'],
        ['@customTypes', './customTypes'],
      ],
    },
  },
}
